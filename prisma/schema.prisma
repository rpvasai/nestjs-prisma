generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(cuid())
  email       String        @unique
  password    String
  name        String?
  permissions Permission[]
  roles       RoleOnUsers[]
}

model Role {
  id          String        @id @default(cuid())
  name        String        @unique
  permissions Permission[]
  users       RoleOnUsers[]
}

model RoleOnUsers {
  id     String  @id @default(cuid())
  Role   Role?   @relation(fields: [roleId], references: [id])
  roleId String?
  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Permission {
  id       String  @id @default(cuid())
  resource String
  action   String
  User     User?   @relation(fields: [userId], references: [id])
  userId   String?
  Role     Role?   @relation(fields: [roleId], references: [id])
  roleId   String?
}

model Screen {
  id             String          @id @default(cuid())
  name           String          @unique
  screenFeatures ScreenFeature[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Feature {
  id             String          @id @default(cuid())
  name           String          @unique // e.g. Login, Signup, Reset
  signInForm     SignInForm      @relation(fields: [signInFormId], references: [id])
  signInFormId   String
  SignupForm     SignupForm?     @relation(fields: [signupFormId], references: [id])
  signupFormId   String?
  screenFeatures ScreenFeature[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ScreenFeature {
  id         String     @id @default(cuid())
  screen     Screen?    @relation(fields: [screenId], references: [id])
  screenId   String?
  feature    Feature?   @relation(fields: [featureId], references: [id])
  featureId  String?
  enabled    Boolean // true for Enable, false for Disable
  visibility Visibility // Enum for Show/Hidden
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@unique([screenId, featureId])
}

model SignInForm {
  id                 String    @id @default(uuid())
  name               String
  description        String
  logoUrl            String
  email              Json // Contains field properties like placeholder, validation rules
  password           Json // Contains field properties like placeholder, validation rules
  rememberMe         Boolean
  registerLink       String?
  resetPasswordLink  String?
  socialLogins       Json? // Array of enabled social login options
  twoFactorAuth      Boolean   @default(false)
  customCss          String? // Custom CSS for styling the login form
  redirectUrl        String? // URL to redirect after successful login
  maxAttempts        Int? // Max login attempts before lockout
  lockoutDuration    Int? // Lockout duration in minutes
  termsAndConditions String? // Link to terms and conditions
  privacyPolicy      String? // Link to privacy policy
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  Feature            Feature[]
}

model SignupForm {
  id                 String    @id @default(uuid())
  name               String
  description        String
  logoUrl            String
  email              Json // Contains field properties like placeholder, validation rules
  password           Json // Contains field properties like placeholder, validation rules
  confirmPassword    Json // Contains field properties like placeholder, validation rules
  firstName          Json? // Optional field for first name
  lastName           Json? // Optional field for last name
  phoneNumber        Json? // Optional field for phone number
  loginLink          String? // Link to login page
  socialSignups      Json? // Array of enabled social signup options
  customCss          String? // Custom CSS for styling the signup form
  redirectUrl        String? // URL to redirect after successful signup
  termsAndConditions String? // Link to terms and conditions
  privacyPolicy      String? // Link to privacy policy
  emailVerification  Boolean   @default(false)
  features           Feature[]
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
}

enum Visibility {
  SHOW
  HIDDEN
}
